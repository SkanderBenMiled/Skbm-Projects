{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"https://gist.github.com/SkanderBenMiled/8d81da39c2f7d91d1b4e2d622fcea9b0#file-untitled3-ipynb","timestamp":1737810892201}],"authorship_tag":"ABX9TyMw0IfeW2afBiw8ZY/xapTy"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Sj_279LoihI9","outputId":"941cfb8b-df31-4913-e61a-c1b66ba43918"},"outputs":[{"output_type":"stream","name":"stdout","text":["Account Balance for Sk bm: 200.0\n","Deposited 200. New balance: 400.0\n","Withdrew 150. New balance: 250.0\n","Invalid withdrawal amount or insufficient funds\n","Account Balance for Sk bm: 250.0\n"]}],"source":["class Account:\n","  def __init__(self, account_number: str, account_holder: str, account_balance: float):\n","    self.account_number = account_number\n","    self.account_holder = account_holder\n","    self.account_balance = account_balance\n","  def deposit(self, amount: float):\n","    if amount > 0:\n","      self.account_balance += amount\n","      print(f\"Deposited {amount}. New balance: {self.account_balance}\")\n","    else:\n","      print(\"Invalid deposit amount\")\n","  def withdraw(self, amount: float):\n","    if amount > 0 and amount <= self.account_balance:\n","      self.account_balance -= amount\n","      print(f\"Withdrew {amount}. New balance: {self.account_balance}\")\n","    else:\n","      print(\"Invalid withdrawal amount or insufficient funds\")\n","  def check_balance(self):\n","    print(f\"Account Balance for {self.account_holder}: {self.account_balance}\")\n","my_account = Account(account_number=\"505416213\", account_holder=\"Sk bm\", account_balance=200.0)\n","my_account.check_balance()\n","my_account.deposit(200)\n","my_account.withdraw(150)\n","my_account.withdraw(600)\n","my_account.check_balance()"]}]}